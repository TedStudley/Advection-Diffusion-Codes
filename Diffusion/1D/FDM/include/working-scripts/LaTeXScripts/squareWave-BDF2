{
  std::ofstream & texStream = openTeXDoc ("LaTeXTables/squareWave-BDF2.tex");
  for (int N = 16; N <= 2048; N *= 2) {
    VectorXd u (N);
    VectorXd u1 (N);
    VectorXd utemp (N);

    double h       = 1.0 / (N + 1);
    double delta_t = mu * h / kappa;
    
    init_timestep (delta_t, T);

    squareWave (u1);
    squareWave (u);
    
    double temp_dt = delta_t / 32;
    backwardEuler (u, temp_dt, h, kappa);
    t = temp_dt;
    for (;t < delta_t; temp_dt *= 2) {
      BDF2 (u, u1, delta_t, h, kappa);
      t += temp_dt;
    }

    t = delta_t;

    for (int i = 0; t < T; ++i) {
      utemp = u;
      BDF2 (u, u1, delta_t, h, kappa);
      u1 = utemp;
      t += delta_t;
    }

    fourierSquare (u1, kappa, t);

    VectorXd error = (u - u1);

    makeTeXRow (texStream, error);
  }

  closeTeXDoc (texStream);
}
