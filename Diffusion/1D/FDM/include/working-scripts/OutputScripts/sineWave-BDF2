{
  std::string outputDir = "Output/sineWave/BDF2/";
  std::stringstream filename;
  std::ofstream outFile;

  int N           = 1024;
  double h        = 1.0 / (N + 1);
  double delta_t  = mu * h / kappa;

  init_timestep (delta_t, T);

  int stride = T / delta_t / 100;

  VectorXd u (N);
  VectorXd u1 (N);
  VectorXd utemp (N);

  sineWave (u1, k);
  sineWave (u, k);
  backwardEuler (u, delta_t, h, kappa);

  t = delta_t;

  for (int i = 0; t < T; i++) {
    utemp = u;
    crankNicolson (u, delta_t, h, kappa);
    u1 = utemp;
    t += delta_t;

    if (i % stride == 0) {
      filename << outputDir << "output-" << setw (6) << setfill ('0') << i << ".dat";
      outFile.open (filename.str().c_str());
      displayField (u, outFile);
      outFile.close ();
      filename.str (std::string ());
    }
  }
}
